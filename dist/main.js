(()=>{"use strict";class t{constructor(){this.cards=document.querySelectorAll(".card"),this.checkCard=this.checkCard.bind(this)}showType(){return this.type}checkCard(t){return this.cards.forEach((t=>t.classList.add("hide"))),this.type=null,t.startsWith("4")?(this.highlightCard("visa"),void(this.type="Visa")):t.startsWith("5")&&t[1]>0&&t[1]<6?(this.highlightCard("mastercard"),void(this.type="Mastercard")):t.startsWith("34")||t.startsWith("37")?(this.highlightCard("american-express"),void(this.type="American Express")):t.startsWith("35")?(this.highlightCard("jcb"),void(this.type="JCB")):t.startsWith("36")||t.startsWith("6011")?(this.highlightCard("diners-club"),void(this.type="Diners Club")):t.startsWith("2")?(this.highlightCard("mir"),void(this.type="Mir")):void(null===this.type&&([...this.cards].forEach((t=>t.classList.remove("hide"))),this.type="This payment method is not supported by our system"))}highlightCard(t){[...this.cards].find((e=>e.classList.contains(t))).classList.remove("hide")}}class e{constructor(t){this.parentEl=t,this.cardTypes=["visa","mastercard","american-express","jcb","diners-club","mir"]}static get markup(){return'\n    <ul id="cards" class="cards list-unstyled"></ul>\n    <form id="form" class="form-inline" novalidate="novalidate" required">\n    <div class="form-group">\n    <input\n      class="form-control col-md-6"\n      id="card_number"\n      name="card_number"\n      type="text"\n      placeholder="Please insert a credit card number"\n      data-original-title=""\n      title=""\n      aria-describedby="tooltip28076"\n      required/>\n    <div\n    class="tooltip fade bottom in"\n    role="tooltip"\n    id="tooltip28076"\n    style="top: 99.0156px; left: 237px; display: block">\n    <div class="tooltip-arrow" style="left: 50%"></div>\n  </div>\n  <button class="button">Click to Validate</button>\n  </div>\n</form> --- '}bindToDOM(){this.parentEl.insertAdjacentHTML("beforeend",e.markup),this.ul=this.parentEl.querySelector(".cards"),this.input=this.parentEl.querySelector(".form-control"),this.cardTypes.forEach((t=>{const e=document.createElement("li");e.classList.add("card",t),e.setAttribute("title",t),this.ul.append(e)})),this.cardValidator=new t,this.input.addEventListener("input",(()=>this.cardValidator.checkCard(this.input.value)))}messageStatus(t){this.form=document.getElementById("form"),this.clearmessage();const e=document.createElement("p");"empty"===t&&(e.classList.add("error-message"),e.textContent="Please enter your credit card number to continue"),"invalid-number"===t&&(e.classList.add("error-message"),e.textContent="Please, enter more digits"),"invalid-card"===t&&(e.classList.add("error-message"),e.textContent=`Your card number is incorrect.\n ${this.cardValidator.showType()}`),"valid-card"===t&&(e.classList.add("success-message"),e.textContent=`This card number is valid f\n ${this.cardValidator.showType()}`),this.form.insertAdjacentElement("afterend",e)}clearmessage(){const t=this.form.nextElementSibling;t&&t.remove()}}const s=new e(document.querySelector(".cards-widget"));s.bindToDOM();new class{constructor(t){this.cardWidget=t,this.input=document.querySelector(".input"),this.form=document.getElementById("form"),this.checkNumber=this.checkNumber.bind(this)}init(){this.form.addEventListener("submit",this.checkNumber)}checkCardNumber(t){Number(e[e.length-1]),this.сalcCheckDigit(e);t.preventDefault();const{value:e}=this.input;19===e.length||e.length>=13&&e.length<=16?this.cardWidget.messageStatus("invalid-card"):0===e.length?this.cardWidget.messageStatus("empty"):this.cardWidget.messageStatus("invalid-number")}сalcCheckDigit(t){const e=t.slice(0,t.length-1).split("").reverse().map(Number),s=e.reduce(((t,e)=>t+e));return e.forEach(((t,s)=>{0!==s&&s%2!=0||(e[s]=2*t)})),e.forEach(((t,s)=>{t>9&&(e[s]=t-9)})),10-s%10}}(s).init()})();